name: Dispatch Web Service Update
on:
   workflow_call:
    inputs:
      type:
        type: string
        required: true
      version:
        type: string
        required: true
      repo:
        type: string
        required: true
    secrets:
      TOKEN: ${{ steps.encrypt-token.outputs.out }}
      required: true
    # outputs: 
      # token: ${{ steps.encrypt-token.outputs.out }}
      # sha: ${{ steps.short-sha.outputs.short-sha }}
    # steps:
    #   # Generate an App Token to checkout our repos in the next jobs
    #   - name: Generate a token
    #     id: generate-token
    #     uses: actions/create-github-app-token@v2
    #     with:
    #       app-id: ${{ vars.GS_DEV_APP_ID }}
    #       private-key: ${{ secrets.GS_DEV_APP_PK }}
    #       owner: ${{ github.repository_owner }}
    #       skip-token-revoke: true
    #   # Encrypt the token and share with the next jobs - github won't allow the token to be outputed directly
    #   - uses: cloudposse/github-action-secret-outputs@main
    #     id: encrypt-token
    #     with:
    #       secret: ${{ secrets.ENCRYPTION_PASSWORD }}
    #       op: encode
    #       in: ${{ steps.generate-token.outputs.token }}
      # # Get a short sha of the commit triggering this run, will be used in the commit message in the tarrget repos
      # - name: Get Short SHA 
      #   id: short-sha
      #   run: echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
      #   working-directory: templates
jobs:
  dispatch-web-update:
    name: Dispatch Web Service Update
    runs-on: ubuntu-latest
    outputs: 
      token: ${{ steps.encrypt-token.outputs.out }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GS_DEV_APP_ID }}
          private-key: ${{ secrets.GS_DEV_APP_PK }}
          owner: ${{ github.repository_owner }}
          skip-token-revoke: true
      - name: encrypt-token
        id: encrypt-token
        uses: cloudposse/github-action-secret-outputs@main
        with:
          secret: ${{ secrets.ENCRYPTION_PASSWORD }}
          op: encode
          in: 
            ${{ steps.generate-token.outputs.token }}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: 
            ${{ steps.encrypt-token.outputs.out }}
          repository: digi-serve/ab_service_web
          event-type: pwa_new_version
          client-payload: '{"type": "${{ inputs.type }}", "version": "${{ inputs.version }}", "repo": "${{ inputs.repo }}"}'


